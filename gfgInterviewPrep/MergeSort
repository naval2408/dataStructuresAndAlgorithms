The task is to complete merge() function which is used to implement Merge Sort.

Input:
First line of the input denotes number of test cases 'T'. First line of the testcase is the size of array and second line consists of array elements separated by space.

Output:
Sorted array in increasing order is displayed to the user.

User Task:
Since this is a functional problem you don't have to worry about input, you just have to complete the function merge().

Constraints:
1 <= T <= 50
1 <= N <= 103
1 <= arr[i] <= 103

Example:
Input:
2
5
4 1 3 9 7
10
10 9 8 7 6 5 4 3 2 1

Output:
1 3 4 7 9
1 2 3 4 5 6 7 8 9 10


{
#Initial Template for Python 3
if __name__ == "__main__":
    t=int(input())
    for i in range(t):
        n=int(input())
        arr=list(map(int,input().split()))
        mergeSort(arr)
        for i in range(n):
            print(arr[i],end=" ")
        print()
}

''' Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function is mentioned above. '''

#User function Template for python3
def mergeSort(arr):
    ms(arr,0,len(arr)-1)

def ms(inputArray, startIndex, endIndex):
    if(startIndex==endIndex):
        return 
    partitionIndex = (startIndex+endIndex)//2
    #print("Start Index :"+str(startIndex)+"EndIndex :"+str(endIndex)+"Partition Index :"+str(partitionIndex))
    ms(inputArray,startIndex,partitionIndex)
    ms(inputArray,partitionIndex+1,endIndex)
    mergeTwoSortedArray(inputArray, startIndex,partitionIndex,endIndex)

def mergeTwoSortedArray(inputArray, startIndex,partitionIndex,endIndex):
    inputArrayOne = []
    inputArrayTwo =[]
    firstMarker = 0
    secondMarker = 0
    count=startIndex
    inputArrayOne = inputArray[startIndex:partitionIndex+1]
    #print(inputArrayOne)
    inputArrayTwo = inputArray[partitionIndex+1:endIndex+1]
    #print(inputArrayTwo)
    while(firstMarker<len(inputArrayOne) and secondMarker<len(inputArrayTwo)):
        if(inputArrayOne[firstMarker]<inputArrayTwo[secondMarker]):
            inputArray[count] = inputArrayOne[firstMarker]
            count = count+1
            firstMarker  = firstMarker+1
            #resultantArray.append(inputArrayOne[firstMarker])
        else:
            inputArray[count] = inputArrayTwo[secondMarker]
            count = count+1
            secondMarker  = secondMarker+1
            #resultantArray.append(inputArrayTwo[secondMarker])
        
    while(firstMarker<len(inputArrayOne)):
            inputArray[count] = inputArrayOne[firstMarker]
            count = count+1
            firstMarker  = firstMarker+1
         
    while(secondMarker<len(inputArrayTwo)):
            inputArray[count] = inputArrayTwo[secondMarker]
            count = count+1
            secondMarker  = secondMarker+1
 #add code here